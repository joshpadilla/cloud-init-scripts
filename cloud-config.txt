<?xml version="1.0"?>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
<meta content="Loggerhead/1.18.2 Python/2.7.3 Bazaar/2.6.0 Paste/1.7.5.1 PasteDeploy/1.3.4 SimpleTAL/4.3 Pygments/1.6 simplejson/3.1.3" name="generator" />
<title>~cloud-init-dev/cloud-init/trunk : contents of doc/examples/cloud-config.txt at revision 1006</title>
<link href="/static/css/global.css" rel="stylesheet" />
<link href="/static/images/favicon.png" rel="shortcut icon" />

<script type="text/javascript">
var global_path = '/~cloud-init-dev/cloud-init/trunk/';
var collapsed_icon_path = '/static/images/treeCollapsed.png';
var expanded_icon_path = '/static/images/treeExpanded.png';
</script>
<script src="/static/javascript/yui/build/yui/yui-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/oop/oop-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/event/event-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/attribute/attribute-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/base/base-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/dom/dom-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/node/node-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/anim/anim-min.js" type="text/javascript"></script>
<script src="/static/javascript/yui/build/io/io-base-min.js" type="text/javascript"></script>
<script src="/static/javascript/custom.js" type="text/javascript"></script>

<link href="/static/css/view.css" media="all" type="text/css" rel="stylesheet" />
<link href="/static/css/highlight.css" media="all" type="text/css" rel="stylesheet" />

</head>
<body class="public">



<div class="black-link">
<a href="https://code.launchpad.net/~cloud-init-dev/cloud-init/trunk">
‚Üê Back to branch summary
</a>
</div>


<h1 class="branch-name">
~cloud-init-dev/cloud-init/trunk
</h1>

<ul id="menuTabs">


<li><a href="/~cloud-init-dev/cloud-init/trunk/changes" title="Changes">Changes</a></li>
<li><a href="/~cloud-init-dev/cloud-init/trunk/files" title="Files" id="on">Files</a></li>

</ul>

<div id="loggerheadCont">
<div id="search_terms"></div>

<div id="breadcrumbs">

<a href="https://code.launchpad.net/~cloud-init-dev/cloud-init/trunk">~cloud-init-dev/cloud-init/trunk</a>


<span>: <span class="breadcrumb">
/<a href="/~cloud-init-dev/cloud-init/trunk/files/1006/doc">doc</a>/<a href="/~cloud-init-dev/cloud-init/trunk/files/1006/doc/examples">examples</a>/cloud-config.txt
</span> (revision 1006)</span>
</div>

<div>

<ul id="submenuTabs">
<li id="first">
<a href="/~cloud-init-dev/cloud-init/trunk/files/1006">browse files</a>
</li>
<li>
<a href="/~cloud-init-dev/cloud-init/trunk/annotate/head:/doc/examples/cloud-config.txt">view with revision information</a>
</li>

<li>
<a href="/~cloud-init-dev/cloud-init/trunk/revision/1006">view revision</a>
</li>
<li>
<a href="/~cloud-init-dev/cloud-init/trunk/changes?filter_file_id=cloudconfig.txt-20100127004921-ou2032hwkan2zmud-3">view changes to this file</a>
</li>
<li id="last">
<a href="/~cloud-init-dev/cloud-init/trunk/download/head:/cloudconfig.txt-20100127004921-ou2032hwkan2zmud-3/cloud-config.txt">download file</a>
</li>
</ul>
<div class="view">
<table id="logentries">

<tr>
<td class="viewLine">
<pre><a id="L1" href="#L1">1</a>
<a id="L2" href="#L2">2</a>
<a id="L3" href="#L3">3</a>
<a id="L4" href="#L4">4</a>
<a id="L5" href="#L5">5</a>
<a id="L6" href="#L6">6</a>
<a id="L7" href="#L7">7</a>
<a id="L8" href="#L8">8</a>
<a id="L9" href="#L9">9</a>
<a id="L10" href="#L10">10</a>
<a id="L11" href="#L11">11</a>
<a id="L12" href="#L12">12</a>
<a id="L13" href="#L13">13</a>
<a id="L14" href="#L14">14</a>
<a id="L15" href="#L15">15</a>
<a id="L16" href="#L16">16</a>
<a id="L17" href="#L17">17</a>
<a id="L18" href="#L18">18</a>
<a id="L19" href="#L19">19</a>
<a id="L20" href="#L20">20</a>
<a id="L21" href="#L21">21</a>
<a id="L22" href="#L22">22</a>
<a id="L23" href="#L23">23</a>
<a id="L24" href="#L24">24</a>
<a id="L25" href="#L25">25</a>
<a id="L26" href="#L26">26</a>
<a id="L27" href="#L27">27</a>
<a id="L28" href="#L28">28</a>
<a id="L29" href="#L29">29</a>
<a id="L30" href="#L30">30</a>
<a id="L31" href="#L31">31</a>
<a id="L32" href="#L32">32</a>
<a id="L33" href="#L33">33</a>
<a id="L34" href="#L34">34</a>
<a id="L35" href="#L35">35</a>
<a id="L36" href="#L36">36</a>
<a id="L37" href="#L37">37</a>
<a id="L38" href="#L38">38</a>
<a id="L39" href="#L39">39</a>
<a id="L40" href="#L40">40</a>
<a id="L41" href="#L41">41</a>
<a id="L42" href="#L42">42</a>
<a id="L43" href="#L43">43</a>
<a id="L44" href="#L44">44</a>
<a id="L45" href="#L45">45</a>
<a id="L46" href="#L46">46</a>
<a id="L47" href="#L47">47</a>
<a id="L48" href="#L48">48</a>
<a id="L49" href="#L49">49</a>
<a id="L50" href="#L50">50</a>
<a id="L51" href="#L51">51</a>
<a id="L52" href="#L52">52</a>
<a id="L53" href="#L53">53</a>
<a id="L54" href="#L54">54</a>
<a id="L55" href="#L55">55</a>
<a id="L56" href="#L56">56</a>
<a id="L57" href="#L57">57</a>
<a id="L58" href="#L58">58</a>
<a id="L59" href="#L59">59</a>
<a id="L60" href="#L60">60</a>
<a id="L61" href="#L61">61</a>
<a id="L62" href="#L62">62</a>
<a id="L63" href="#L63">63</a>
<a id="L64" href="#L64">64</a>
<a id="L65" href="#L65">65</a>
<a id="L66" href="#L66">66</a>
<a id="L67" href="#L67">67</a>
<a id="L68" href="#L68">68</a>
<a id="L69" href="#L69">69</a>
<a id="L70" href="#L70">70</a>
<a id="L71" href="#L71">71</a>
<a id="L72" href="#L72">72</a>
<a id="L73" href="#L73">73</a>
<a id="L74" href="#L74">74</a>
<a id="L75" href="#L75">75</a>
<a id="L76" href="#L76">76</a>
<a id="L77" href="#L77">77</a>
<a id="L78" href="#L78">78</a>
<a id="L79" href="#L79">79</a>
<a id="L80" href="#L80">80</a>
<a id="L81" href="#L81">81</a>
<a id="L82" href="#L82">82</a>
<a id="L83" href="#L83">83</a>
<a id="L84" href="#L84">84</a>
<a id="L85" href="#L85">85</a>
<a id="L86" href="#L86">86</a>
<a id="L87" href="#L87">87</a>
<a id="L88" href="#L88">88</a>
<a id="L89" href="#L89">89</a>
<a id="L90" href="#L90">90</a>
<a id="L91" href="#L91">91</a>
<a id="L92" href="#L92">92</a>
<a id="L93" href="#L93">93</a>
<a id="L94" href="#L94">94</a>
<a id="L95" href="#L95">95</a>
<a id="L96" href="#L96">96</a>
<a id="L97" href="#L97">97</a>
<a id="L98" href="#L98">98</a>
<a id="L99" href="#L99">99</a>
<a id="L100" href="#L100">100</a>
<a id="L101" href="#L101">101</a>
<a id="L102" href="#L102">102</a>
<a id="L103" href="#L103">103</a>
<a id="L104" href="#L104">104</a>
<a id="L105" href="#L105">105</a>
<a id="L106" href="#L106">106</a>
<a id="L107" href="#L107">107</a>
<a id="L108" href="#L108">108</a>
<a id="L109" href="#L109">109</a>
<a id="L110" href="#L110">110</a>
<a id="L111" href="#L111">111</a>
<a id="L112" href="#L112">112</a>
<a id="L113" href="#L113">113</a>
<a id="L114" href="#L114">114</a>
<a id="L115" href="#L115">115</a>
<a id="L116" href="#L116">116</a>
<a id="L117" href="#L117">117</a>
<a id="L118" href="#L118">118</a>
<a id="L119" href="#L119">119</a>
<a id="L120" href="#L120">120</a>
<a id="L121" href="#L121">121</a>
<a id="L122" href="#L122">122</a>
<a id="L123" href="#L123">123</a>
<a id="L124" href="#L124">124</a>
<a id="L125" href="#L125">125</a>
<a id="L126" href="#L126">126</a>
<a id="L127" href="#L127">127</a>
<a id="L128" href="#L128">128</a>
<a id="L129" href="#L129">129</a>
<a id="L130" href="#L130">130</a>
<a id="L131" href="#L131">131</a>
<a id="L132" href="#L132">132</a>
<a id="L133" href="#L133">133</a>
<a id="L134" href="#L134">134</a>
<a id="L135" href="#L135">135</a>
<a id="L136" href="#L136">136</a>
<a id="L137" href="#L137">137</a>
<a id="L138" href="#L138">138</a>
<a id="L139" href="#L139">139</a>
<a id="L140" href="#L140">140</a>
<a id="L141" href="#L141">141</a>
<a id="L142" href="#L142">142</a>
<a id="L143" href="#L143">143</a>
<a id="L144" href="#L144">144</a>
<a id="L145" href="#L145">145</a>
<a id="L146" href="#L146">146</a>
<a id="L147" href="#L147">147</a>
<a id="L148" href="#L148">148</a>
<a id="L149" href="#L149">149</a>
<a id="L150" href="#L150">150</a>
<a id="L151" href="#L151">151</a>
<a id="L152" href="#L152">152</a>
<a id="L153" href="#L153">153</a>
<a id="L154" href="#L154">154</a>
<a id="L155" href="#L155">155</a>
<a id="L156" href="#L156">156</a>
<a id="L157" href="#L157">157</a>
<a id="L158" href="#L158">158</a>
<a id="L159" href="#L159">159</a>
<a id="L160" href="#L160">160</a>
<a id="L161" href="#L161">161</a>
<a id="L162" href="#L162">162</a>
<a id="L163" href="#L163">163</a>
<a id="L164" href="#L164">164</a>
<a id="L165" href="#L165">165</a>
<a id="L166" href="#L166">166</a>
<a id="L167" href="#L167">167</a>
<a id="L168" href="#L168">168</a>
<a id="L169" href="#L169">169</a>
<a id="L170" href="#L170">170</a>
<a id="L171" href="#L171">171</a>
<a id="L172" href="#L172">172</a>
<a id="L173" href="#L173">173</a>
<a id="L174" href="#L174">174</a>
<a id="L175" href="#L175">175</a>
<a id="L176" href="#L176">176</a>
<a id="L177" href="#L177">177</a>
<a id="L178" href="#L178">178</a>
<a id="L179" href="#L179">179</a>
<a id="L180" href="#L180">180</a>
<a id="L181" href="#L181">181</a>
<a id="L182" href="#L182">182</a>
<a id="L183" href="#L183">183</a>
<a id="L184" href="#L184">184</a>
<a id="L185" href="#L185">185</a>
<a id="L186" href="#L186">186</a>
<a id="L187" href="#L187">187</a>
<a id="L188" href="#L188">188</a>
<a id="L189" href="#L189">189</a>
<a id="L190" href="#L190">190</a>
<a id="L191" href="#L191">191</a>
<a id="L192" href="#L192">192</a>
<a id="L193" href="#L193">193</a>
<a id="L194" href="#L194">194</a>
<a id="L195" href="#L195">195</a>
<a id="L196" href="#L196">196</a>
<a id="L197" href="#L197">197</a>
<a id="L198" href="#L198">198</a>
<a id="L199" href="#L199">199</a>
<a id="L200" href="#L200">200</a>
<a id="L201" href="#L201">201</a>
<a id="L202" href="#L202">202</a>
<a id="L203" href="#L203">203</a>
<a id="L204" href="#L204">204</a>
<a id="L205" href="#L205">205</a>
<a id="L206" href="#L206">206</a>
<a id="L207" href="#L207">207</a>
<a id="L208" href="#L208">208</a>
<a id="L209" href="#L209">209</a>
<a id="L210" href="#L210">210</a>
<a id="L211" href="#L211">211</a>
<a id="L212" href="#L212">212</a>
<a id="L213" href="#L213">213</a>
<a id="L214" href="#L214">214</a>
<a id="L215" href="#L215">215</a>
<a id="L216" href="#L216">216</a>
<a id="L217" href="#L217">217</a>
<a id="L218" href="#L218">218</a>
<a id="L219" href="#L219">219</a>
<a id="L220" href="#L220">220</a>
<a id="L221" href="#L221">221</a>
<a id="L222" href="#L222">222</a>
<a id="L223" href="#L223">223</a>
<a id="L224" href="#L224">224</a>
<a id="L225" href="#L225">225</a>
<a id="L226" href="#L226">226</a>
<a id="L227" href="#L227">227</a>
<a id="L228" href="#L228">228</a>
<a id="L229" href="#L229">229</a>
<a id="L230" href="#L230">230</a>
<a id="L231" href="#L231">231</a>
<a id="L232" href="#L232">232</a>
<a id="L233" href="#L233">233</a>
<a id="L234" href="#L234">234</a>
<a id="L235" href="#L235">235</a>
<a id="L236" href="#L236">236</a>
<a id="L237" href="#L237">237</a>
<a id="L238" href="#L238">238</a>
<a id="L239" href="#L239">239</a>
<a id="L240" href="#L240">240</a>
<a id="L241" href="#L241">241</a>
<a id="L242" href="#L242">242</a>
<a id="L243" href="#L243">243</a>
<a id="L244" href="#L244">244</a>
<a id="L245" href="#L245">245</a>
<a id="L246" href="#L246">246</a>
<a id="L247" href="#L247">247</a>
<a id="L248" href="#L248">248</a>
<a id="L249" href="#L249">249</a>
<a id="L250" href="#L250">250</a>
<a id="L251" href="#L251">251</a>
<a id="L252" href="#L252">252</a>
<a id="L253" href="#L253">253</a>
<a id="L254" href="#L254">254</a>
<a id="L255" href="#L255">255</a>
<a id="L256" href="#L256">256</a>
<a id="L257" href="#L257">257</a>
<a id="L258" href="#L258">258</a>
<a id="L259" href="#L259">259</a>
<a id="L260" href="#L260">260</a>
<a id="L261" href="#L261">261</a>
<a id="L262" href="#L262">262</a>
<a id="L263" href="#L263">263</a>
<a id="L264" href="#L264">264</a>
<a id="L265" href="#L265">265</a>
<a id="L266" href="#L266">266</a>
<a id="L267" href="#L267">267</a>
<a id="L268" href="#L268">268</a>
<a id="L269" href="#L269">269</a>
<a id="L270" href="#L270">270</a>
<a id="L271" href="#L271">271</a>
<a id="L272" href="#L272">272</a>
<a id="L273" href="#L273">273</a>
<a id="L274" href="#L274">274</a>
<a id="L275" href="#L275">275</a>
<a id="L276" href="#L276">276</a>
<a id="L277" href="#L277">277</a>
<a id="L278" href="#L278">278</a>
<a id="L279" href="#L279">279</a>
<a id="L280" href="#L280">280</a>
<a id="L281" href="#L281">281</a>
<a id="L282" href="#L282">282</a>
<a id="L283" href="#L283">283</a>
<a id="L284" href="#L284">284</a>
<a id="L285" href="#L285">285</a>
<a id="L286" href="#L286">286</a>
<a id="L287" href="#L287">287</a>
<a id="L288" href="#L288">288</a>
<a id="L289" href="#L289">289</a>
<a id="L290" href="#L290">290</a>
<a id="L291" href="#L291">291</a>
<a id="L292" href="#L292">292</a>
<a id="L293" href="#L293">293</a>
<a id="L294" href="#L294">294</a>
<a id="L295" href="#L295">295</a>
<a id="L296" href="#L296">296</a>
<a id="L297" href="#L297">297</a>
<a id="L298" href="#L298">298</a>
<a id="L299" href="#L299">299</a>
<a id="L300" href="#L300">300</a>
<a id="L301" href="#L301">301</a>
<a id="L302" href="#L302">302</a>
<a id="L303" href="#L303">303</a>
<a id="L304" href="#L304">304</a>
<a id="L305" href="#L305">305</a>
<a id="L306" href="#L306">306</a>
<a id="L307" href="#L307">307</a>
<a id="L308" href="#L308">308</a>
<a id="L309" href="#L309">309</a>
<a id="L310" href="#L310">310</a>
<a id="L311" href="#L311">311</a>
<a id="L312" href="#L312">312</a>
<a id="L313" href="#L313">313</a>
<a id="L314" href="#L314">314</a>
<a id="L315" href="#L315">315</a>
<a id="L316" href="#L316">316</a>
<a id="L317" href="#L317">317</a>
<a id="L318" href="#L318">318</a>
<a id="L319" href="#L319">319</a>
<a id="L320" href="#L320">320</a>
<a id="L321" href="#L321">321</a>
<a id="L322" href="#L322">322</a>
<a id="L323" href="#L323">323</a>
<a id="L324" href="#L324">324</a>
<a id="L325" href="#L325">325</a>
<a id="L326" href="#L326">326</a>
<a id="L327" href="#L327">327</a>
<a id="L328" href="#L328">328</a>
<a id="L329" href="#L329">329</a>
<a id="L330" href="#L330">330</a>
<a id="L331" href="#L331">331</a>
<a id="L332" href="#L332">332</a>
<a id="L333" href="#L333">333</a>
<a id="L334" href="#L334">334</a>
<a id="L335" href="#L335">335</a>
<a id="L336" href="#L336">336</a>
<a id="L337" href="#L337">337</a>
<a id="L338" href="#L338">338</a>
<a id="L339" href="#L339">339</a>
<a id="L340" href="#L340">340</a>
<a id="L341" href="#L341">341</a>
<a id="L342" href="#L342">342</a>
<a id="L343" href="#L343">343</a>
<a id="L344" href="#L344">344</a>
<a id="L345" href="#L345">345</a>
<a id="L346" href="#L346">346</a>
<a id="L347" href="#L347">347</a>
<a id="L348" href="#L348">348</a>
<a id="L349" href="#L349">349</a>
<a id="L350" href="#L350">350</a>
<a id="L351" href="#L351">351</a>
<a id="L352" href="#L352">352</a>
<a id="L353" href="#L353">353</a>
<a id="L354" href="#L354">354</a>
<a id="L355" href="#L355">355</a>
<a id="L356" href="#L356">356</a>
<a id="L357" href="#L357">357</a>
<a id="L358" href="#L358">358</a>
<a id="L359" href="#L359">359</a>
<a id="L360" href="#L360">360</a>
<a id="L361" href="#L361">361</a>
<a id="L362" href="#L362">362</a>
<a id="L363" href="#L363">363</a>
<a id="L364" href="#L364">364</a>
<a id="L365" href="#L365">365</a>
<a id="L366" href="#L366">366</a>
<a id="L367" href="#L367">367</a>
<a id="L368" href="#L368">368</a>
<a id="L369" href="#L369">369</a>
<a id="L370" href="#L370">370</a>
<a id="L371" href="#L371">371</a>
<a id="L372" href="#L372">372</a>
<a id="L373" href="#L373">373</a>
<a id="L374" href="#L374">374</a>
<a id="L375" href="#L375">375</a>
<a id="L376" href="#L376">376</a>
<a id="L377" href="#L377">377</a>
<a id="L378" href="#L378">378</a>
<a id="L379" href="#L379">379</a>
<a id="L380" href="#L380">380</a>
<a id="L381" href="#L381">381</a>
<a id="L382" href="#L382">382</a>
<a id="L383" href="#L383">383</a>
<a id="L384" href="#L384">384</a>
<a id="L385" href="#L385">385</a>
<a id="L386" href="#L386">386</a>
<a id="L387" href="#L387">387</a>
<a id="L388" href="#L388">388</a>
<a id="L389" href="#L389">389</a>
<a id="L390" href="#L390">390</a>
<a id="L391" href="#L391">391</a>
<a id="L392" href="#L392">392</a>
<a id="L393" href="#L393">393</a>
<a id="L394" href="#L394">394</a>
<a id="L395" href="#L395">395</a>
<a id="L396" href="#L396">396</a>
<a id="L397" href="#L397">397</a>
<a id="L398" href="#L398">398</a>
<a id="L399" href="#L399">399</a>
<a id="L400" href="#L400">400</a>
<a id="L401" href="#L401">401</a>
<a id="L402" href="#L402">402</a>
<a id="L403" href="#L403">403</a>
<a id="L404" href="#L404">404</a>
<a id="L405" href="#L405">405</a>
<a id="L406" href="#L406">406</a>
<a id="L407" href="#L407">407</a>
<a id="L408" href="#L408">408</a>
<a id="L409" href="#L409">409</a>
<a id="L410" href="#L410">410</a>
<a id="L411" href="#L411">411</a>
<a id="L412" href="#L412">412</a>
<a id="L413" href="#L413">413</a>
<a id="L414" href="#L414">414</a>
<a id="L415" href="#L415">415</a>
<a id="L416" href="#L416">416</a>
<a id="L417" href="#L417">417</a>
<a id="L418" href="#L418">418</a>
<a id="L419" href="#L419">419</a>
<a id="L420" href="#L420">420</a>
<a id="L421" href="#L421">421</a>
<a id="L422" href="#L422">422</a>
<a id="L423" href="#L423">423</a>
<a id="L424" href="#L424">424</a>
<a id="L425" href="#L425">425</a>
<a id="L426" href="#L426">426</a>
<a id="L427" href="#L427">427</a>
<a id="L428" href="#L428">428</a>
<a id="L429" href="#L429">429</a>
<a id="L430" href="#L430">430</a>
<a id="L431" href="#L431">431</a>
<a id="L432" href="#L432">432</a>
<a id="L433" href="#L433">433</a>
<a id="L434" href="#L434">434</a>
<a id="L435" href="#L435">435</a>
<a id="L436" href="#L436">436</a>
<a id="L437" href="#L437">437</a>
<a id="L438" href="#L438">438</a>
<a id="L439" href="#L439">439</a>
<a id="L440" href="#L440">440</a>
<a id="L441" href="#L441">441</a>
<a id="L442" href="#L442">442</a>
<a id="L443" href="#L443">443</a>
<a id="L444" href="#L444">444</a>
<a id="L445" href="#L445">445</a>
<a id="L446" href="#L446">446</a>
<a id="L447" href="#L447">447</a>
<a id="L448" href="#L448">448</a>
<a id="L449" href="#L449">449</a>
<a id="L450" href="#L450">450</a>
<a id="L451" href="#L451">451</a>
<a id="L452" href="#L452">452</a>
<a id="L453" href="#L453">453</a>
<a id="L454" href="#L454">454</a>
<a id="L455" href="#L455">455</a>
<a id="L456" href="#L456">456</a>
<a id="L457" href="#L457">457</a>
<a id="L458" href="#L458">458</a>
<a id="L459" href="#L459">459</a>
<a id="L460" href="#L460">460</a>
<a id="L461" href="#L461">461</a>
<a id="L462" href="#L462">462</a>
<a id="L463" href="#L463">463</a>
<a id="L464" href="#L464">464</a>
<a id="L465" href="#L465">465</a>
<a id="L466" href="#L466">466</a>
<a id="L467" href="#L467">467</a>
<a id="L468" href="#L468">468</a>
<a id="L469" href="#L469">469</a>
<a id="L470" href="#L470">470</a>
<a id="L471" href="#L471">471</a>
<a id="L472" href="#L472">472</a>
<a id="L473" href="#L473">473</a>
<a id="L474" href="#L474">474</a>
<a id="L475" href="#L475">475</a>
<a id="L476" href="#L476">476</a>
<a id="L477" href="#L477">477</a>
<a id="L478" href="#L478">478</a>
<a id="L479" href="#L479">479</a>
<a id="L480" href="#L480">480</a>
<a id="L481" href="#L481">481</a>
<a id="L482" href="#L482">482</a>
<a id="L483" href="#L483">483</a>
<a id="L484" href="#L484">484</a>
<a id="L485" href="#L485">485</a>
<a id="L486" href="#L486">486</a>
<a id="L487" href="#L487">487</a>
<a id="L488" href="#L488">488</a>
<a id="L489" href="#L489">489</a>
<a id="L490" href="#L490">490</a>
<a id="L491" href="#L491">491</a>
<a id="L492" href="#L492">492</a>
<a id="L493" href="#L493">493</a>
<a id="L494" href="#L494">494</a>
<a id="L495" href="#L495">495</a>
<a id="L496" href="#L496">496</a>
<a id="L497" href="#L497">497</a>
<a id="L498" href="#L498">498</a>
<a id="L499" href="#L499">499</a>
<a id="L500" href="#L500">500</a>
<a id="L501" href="#L501">501</a>
<a id="L502" href="#L502">502</a>
<a id="L503" href="#L503">503</a>
<a id="L504" href="#L504">504</a>
<a id="L505" href="#L505">505</a>
<a id="L506" href="#L506">506</a>
<a id="L507" href="#L507">507</a>
<a id="L508" href="#L508">508</a>
<a id="L509" href="#L509">509</a>
<a id="L510" href="#L510">510</a>
<a id="L511" href="#L511">511</a>
<a id="L512" href="#L512">512</a>
<a id="L513" href="#L513">513</a>
<a id="L514" href="#L514">514</a>
<a id="L515" href="#L515">515</a>
<a id="L516" href="#L516">516</a>
<a id="L517" href="#L517">517</a>
<a id="L518" href="#L518">518</a>
<a id="L519" href="#L519">519</a>
<a id="L520" href="#L520">520</a>
<a id="L521" href="#L521">521</a>
<a id="L522" href="#L522">522</a>
<a id="L523" href="#L523">523</a>
<a id="L524" href="#L524">524</a>
<a id="L525" href="#L525">525</a>
<a id="L526" href="#L526">526</a>
<a id="L527" href="#L527">527</a>
<a id="L528" href="#L528">528</a>
<a id="L529" href="#L529">529</a>
<a id="L530" href="#L530">530</a>
<a id="L531" href="#L531">531</a>
<a id="L532" href="#L532">532</a>
<a id="L533" href="#L533">533</a>
<a id="L534" href="#L534">534</a>
<a id="L535" href="#L535">535</a>
<a id="L536" href="#L536">536</a>
<a id="L537" href="#L537">537</a>
<a id="L538" href="#L538">538</a>
<a id="L539" href="#L539">539</a>
<a id="L540" href="#L540">540</a>
<a id="L541" href="#L541">541</a>
<a id="L542" href="#L542">542</a>
<a id="L543" href="#L543">543</a>
<a id="L544" href="#L544">544</a>
<a id="L545" href="#L545">545</a>
<a id="L546" href="#L546">546</a>
<a id="L547" href="#L547">547</a>
<a id="L548" href="#L548">548</a>
<a id="L549" href="#L549">549</a>
<a id="L550" href="#L550">550</a>
<a id="L551" href="#L551">551</a>
<a id="L552" href="#L552">552</a>
<a id="L553" href="#L553">553</a>
<a id="L554" href="#L554">554</a>
<a id="L555" href="#L555">555</a>
<a id="L556" href="#L556">556</a>
<a id="L557" href="#L557">557</a>
<a id="L558" href="#L558">558</a>
<a id="L559" href="#L559">559</a>
<a id="L560" href="#L560">560</a>
<a id="L561" href="#L561">561</a>
<a id="L562" href="#L562">562</a>
<a id="L563" href="#L563">563</a>
<a id="L564" href="#L564">564</a>
<a id="L565" href="#L565">565</a>
<a id="L566" href="#L566">566</a>
<a id="L567" href="#L567">567</a>
<a id="L568" href="#L568">568</a>
<a id="L569" href="#L569">569</a>
<a id="L570" href="#L570">570</a>
<a id="L571" href="#L571">571</a>
<a id="L572" href="#L572">572</a>
<a id="L573" href="#L573">573</a>
<a id="L574" href="#L574">574</a>
<a id="L575" href="#L575">575</a>
<a id="L576" href="#L576">576</a>
<a id="L577" href="#L577">577</a>
<a id="L578" href="#L578">578</a>
<a id="L579" href="#L579">579</a>
<a id="L580" href="#L580">580</a>
<a id="L581" href="#L581">581</a>
<a id="L582" href="#L582">582</a>
<a id="L583" href="#L583">583</a>
<a id="L584" href="#L584">584</a>
<a id="L585" href="#L585">585</a>
<a id="L586" href="#L586">586</a>
<a id="L587" href="#L587">587</a>
<a id="L588" href="#L588">588</a>
<a id="L589" href="#L589">589</a>
<a id="L590" href="#L590">590</a>
<a id="L591" href="#L591">591</a>
<a id="L592" href="#L592">592</a>
<a id="L593" href="#L593">593</a>
<a id="L594" href="#L594">594</a>
<a id="L595" href="#L595">595</a>
<a id="L596" href="#L596">596</a>
<a id="L597" href="#L597">597</a>
<a id="L598" href="#L598">598</a>
<a id="L599" href="#L599">599</a>
<a id="L600" href="#L600">600</a>
<a id="L601" href="#L601">601</a>
<a id="L602" href="#L602">602</a>
<a id="L603" href="#L603">603</a>
<a id="L604" href="#L604">604</a>
<a id="L605" href="#L605">605</a>
<a id="L606" href="#L606">606</a>
<a id="L607" href="#L607">607</a>
<a id="L608" href="#L608">608</a>
<a id="L609" href="#L609">609</a>
<a id="L610" href="#L610">610</a>
<a id="L611" href="#L611">611</a>
<a id="L612" href="#L612">612</a>
<a id="L613" href="#L613">613</a>
<a id="L614" href="#L614">614</a>
<a id="L615" href="#L615">615</a>
<a id="L616" href="#L616">616</a>
<a id="L617" href="#L617">617</a>
<a id="L618" href="#L618">618</a>
<a id="L619" href="#L619">619</a>
<a id="L620" href="#L620">620</a>
<a id="L621" href="#L621">621</a>
<a id="L622" href="#L622">622</a>
<a id="L623" href="#L623">623</a>
<a id="L624" href="#L624">624</a>
<a id="L625" href="#L625">625</a>
<a id="L626" href="#L626">626</a>
<a id="L627" href="#L627">627</a>
<a id="L628" href="#L628">628</a>
<a id="L629" href="#L629">629</a>
<a id="L630" href="#L630">630</a>
<a id="L631" href="#L631">631</a>
<a id="L632" href="#L632">632</a>
<a id="L633" href="#L633">633</a>
<a id="L634" href="#L634">634</a>
<a id="L635" href="#L635">635</a>
<a id="L636" href="#L636">636</a>
<a id="L637" href="#L637">637</a>
<a id="L638" href="#L638">638</a>
<a id="L639" href="#L639">639</a>
<a id="L640" href="#L640">640</a>
<a id="L641" href="#L641">641</a>
</pre>
</td>
<td class="viewCont">
<pre>#cloud-config
# Update apt database on first boot
# (ie run apt-get update)
#
# Default: true
# Aliases: apt_update
package_update: false

# Upgrade the instance on first boot
# (ie run apt-get upgrade)
#
# Default: false
# Aliases: apt_upgrade
package_upgrade: true

# Reboot after package install/update if necessary
# Default: false
# Aliases: apt_reboot_if_required
package_reboot_if_required: true

# Add apt repositories
#
# Default: auto select based on cloud metadata
#  in ec2, the default is &lt;region&gt;.archive.ubuntu.com
# apt_mirror:
#   use the provided mirror
# apt_mirror_search:
#   search the list for the first mirror.
#   this is currently very limited, only verifying that
#   the mirror is dns resolvable or an IP address
#
# if neither apt_mirror nor apt_mirror search is set (the default)
# then use the mirror provided by the DataSource found.
# In EC2, that means using &lt;region&gt;.ec2.archive.ubuntu.com
# 
# if no mirror is provided by the DataSource, and &#39;apt_mirror_search_dns&#39; is
# true, then search for dns names &#39;&lt;distro&gt;-mirror&#39; in each of
# - fqdn of this host per cloud metadata
# - localdomain
# - no domain (which would search domains listed in /etc/resolv.conf)
# If there is a dns entry for &lt;distro&gt;-mirror, then it is assumed that there
# is a distro mirror at http://&lt;distro&gt;-mirror.&lt;domain&gt;/&lt;distro&gt;
#
# That gives the cloud provider the opportunity to set mirrors of a distro
# up and expose them only by creating dns entries.
#
# if none of that is found, then the default distro mirror is used
apt_mirror: http://us.archive.ubuntu.com/ubuntu/
apt_mirror_search: 
 - http://local-mirror.mydomain
 - http://archive.ubuntu.com

apt_mirror_search_dns: False

# apt_proxy (configure Acquire::HTTP::Proxy)
# &#39;apt_http_proxy&#39; is an alias for &#39;apt_proxy&#39;.
# Also, available are &#39;apt_ftp_proxy&#39; and &#39;apt_https_proxy&#39;.
# These affect Acquire::FTP::Proxy and Acquire::HTTPS::Proxy respectively
apt_proxy: http://my.apt.proxy:3128

# apt_pipelining (configure Acquire::http::Pipeline-Depth)
# Default: disables HTTP pipelining. Certain web servers, such
# as S3 do not pipeline properly (LP: #948461).
# Valid options:
#   False/default: Disables pipelining for APT
#   None/Unchanged: Use OS default
#   Number: Set pipelining to some number (not recommended)
apt_pipelining: False

# Preserve existing /etc/apt/sources.list
# Default: overwrite sources_list with mirror.  If this is true
# then apt_mirror above will have no effect
apt_preserve_sources_list: true

# &#39;source&#39; entries in apt-sources that match this python regex
# expression will be passed to add-apt-repository
add_apt_repo_match: &#39;^[\w-]+:\w&#39;

apt_sources:
 - source: &quot;deb http://ppa.launchpad.net/byobu/ppa/ubuntu karmic main&quot;
   keyid: F430BBA5 # GPG key ID published on a key server
   filename: byobu-ppa.list

 # PPA shortcut:
 #  * Setup correct apt sources.list line
 #  * Import the signing key from LP
 #
 #  See https://help.launchpad.net/Packaging/PPA for more information
 #  this requires &#39;add-apt-repository&#39;
 - source: &quot;ppa:smoser/ppa&quot;    # Quote the string

 # Custom apt repository:
 #  * all that is required is &#39;source&#39;
 #  * Creates a file in /etc/apt/sources.list.d/ for the sources list entry
 #  * [optional] Import the apt signing key from the keyserver 
 #  * Defaults:
 #    + keyserver: keyserver.ubuntu.com
 #    + filename: cloud_config_sources.list
 #
 #    See sources.list man page for more information about the format
 - source: deb http://archive.ubuntu.com/ubuntu karmic-backports main universe multiverse restricted

 # sources can use $MIRROR and $RELEASE and they will be replaced
 # with the local mirror for this cloud, and the running release
 # the entry below would be possibly turned into:
 # - source: deb http://us-east-1.ec2.archive.ubuntu.com/ubuntu natty multiverse
 - source: deb $MIRROR $RELEASE multiverse

 # this would have the same end effect as &#39;ppa:byobu/ppa&#39;
 - source: &quot;deb http://ppa.launchpad.net/byobu/ppa/ubuntu karmic main&quot;
   keyid: F430BBA5 # GPG key ID published on a key server
   filename: byobu-ppa.list

 # Custom apt repository:
 #  * The apt signing key can also be specified
 #    by providing a pgp public key block
 #  * Providing the PBG key here is the most robust method for
 #    specifying a key, as it removes dependency on a remote key server

 - source: deb http://ppa.launchpad.net/alestic/ppa/ubuntu karmic main 
   key: | # The value needs to start with -----BEGIN PGP PUBLIC KEY BLOCK-----
      -----BEGIN PGP PUBLIC KEY BLOCK-----
      Version: SKS 1.0.10

      mI0ESpA3UQEEALdZKVIMq0j6qWAXAyxSlF63SvPVIgxHPb9Nk0DZUixn+akqytxG4zKCONz6
      qLjoBBfHnynyVLfT4ihg9an1PqxRnTO+JKQxl8NgKGz6Pon569GtAOdWNKw15XKinJTDLjnj
      9y96ljJqRcpV9t/WsIcdJPcKFR5voHTEoABE2aEXABEBAAG0GUxhdW5jaHBhZCBQUEEgZm9y
      IEFsZXN0aWOItgQTAQIAIAUCSpA3UQIbAwYLCQgHAwIEFQIIAwQWAgMBAh4BAheAAAoJEA7H
      5Qi+CcVxWZ8D/1MyYvfj3FJPZUm2Yo1zZsQ657vHI9+pPouqflWOayRR9jbiyUFIn0VdQBrP
      t0FwvnOFArUovUWoKAEdqR8hPy3M3APUZjl5K4cMZR/xaMQeQRZ5CHpS4DBKURKAHC0ltS5o
      uBJKQOZm5iltJp15cgyIkBkGe8Mx18VFyVglAZey
      =Y2oI
      -----END PGP PUBLIC KEY BLOCK-----

## apt config via system_info:
# under the &#39;system_info&#39;, you can further customize cloud-init&#39;s interaction
# with apt. 
#   system_info:
#    apt_get_command: [command, argument, argument]
#    apt_get_upgrade_subcommand: dist-upgrade
#
# apt_get_command:
#  To specify a different &#39;apt-get&#39; command, set &#39;apt_get_command&#39;.
#  This must be a list, and the subcommand (update, upgrade) is appended to it.
#  default is:
#    [&#39;apt-get&#39;, &#39;--option=Dpkg::Options::=--force-confold&#39;,
#     &#39;--option=Dpkg::options::=--force-unsafe-io&#39;, &#39;--assume-yes&#39;, &#39;--quiet&#39;]
#
# apt_get_upgrade_subcommand:
#  Specify a different subcommand for &#39;upgrade. The default is &#39;dist-upgrade&#39;.
#  This is the subcommand that is invoked if package_upgrade is set to true above.
#
# apt_get_wrapper:
#   command: eatmydata
#   enabled: [True, False, &quot;auto&quot;]
#  

# Install additional packages on first boot
#
# Default: none
#
# if packages are specified, this apt_update will be set to true
#
packages:
 - pwgen
 - pastebinit

# set up mount points
# &#39;mounts&#39; contains a list of lists
#  the inner list are entries for an /etc/fstab line
#  ie : [ fs_spec, fs_file, fs_vfstype, fs_mntops, fs-freq, fs_passno ]
#
# default:
# mounts:
#  - [ ephemeral0, /mnt ]
#  - [ swap, none, swap, sw, 0, 0 ]
#
# in order to remove a previously listed mount (ie, one from defaults)
# list only the fs_spec.  For example, to override the default, of
# mounting swap:
# - [ swap ]
# or
# - [ swap, null ]
#
# - if a device does not exist at the time, an entry will still be
#   written to /etc/fstab.
# - &#39;/dev&#39; can be ommitted for device names that begin with: xvd, sd, hd, vd
# - if an entry does not have all 6 fields, they will be filled in
#   with values from &#39;mount_default_fields&#39; below.
#
# Note, that you should set &#39;nobootwait&#39; (see man fstab) for volumes that may
# not be attached at instance boot (or reboot)
#
mounts:
 - [ ephemeral0, /mnt, auto, &quot;defaults,noexec&quot; ]
 - [ sdc, /opt/data ]
 - [ xvdh, /opt/data, &quot;auto&quot;, &quot;defaults,nobootwait&quot;, &quot;0&quot;, &quot;0&quot; ]
 - [ dd, /dev/zero ]

# mount_default_fields
# These values are used to fill in any entries in &#39;mounts&#39; that are not
# complete.  This must be an array, and must have 7 fields.
mount_default_fields: [ None, None, &quot;auto&quot;, &quot;defaults,nobootwait&quot;, &quot;0&quot;, &quot;2&quot; ]

# add each entry to ~/.ssh/authorized_keys for the configured user or the
# first user defined in the user definition directive.
ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAGEA3FSyQwBI6Z+nCSjUUk8EEAnnkhXlukKoUPND/RRClWz2s5TCzIkd3Ou5+Cyz71X0XmazM3l5WgeErvtIwQMyT1KjNoMhoJMrJnWqQPOt5Q8zWd9qG7PBl9+eiH5qV7NZ mykey@host
  - ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3I7VUf2l5gSn5uavROsc5HRDpZdQueUq5ozemNSj8T7enqKHOEaFoU2VoPgGEWC9RyzSQVeyD6s7APMcE82EtmW4skVEgEGSbDc1pvxzxtchBj78hJP6Cf5TCMFSXw+Fz5rF1dR23QDbN1mkHs7adr8GW4kSWqU7Q7NDwfIrJJtO7Hi42GyXtvEONHbiRPOe8stqUly7MvUoN+5kfjBM8Qqpfl2+FNhTYWpMfYdPUnE7u536WqzFmsaqJctz3gBxH9Ex7dFtrxR4qiqEr9Qtlu3xGn7Bw07/+i1D+ey3ONkZLN+LQ714cgj8fRS4Hj29SCmXp5Kt5/82cD/VN3NtHw== smoser@brickies

# Send pre-generated ssh private keys to the server
# If these are present, they will be written to /etc/ssh and
# new random keys will not be generated
#  in addition to &#39;rsa&#39; and &#39;dsa&#39; as shown below, &#39;ecdsa&#39; is also supported
ssh_keys:
  rsa_private: |
    -----BEGIN RSA PRIVATE KEY-----
    MIIBxwIBAAJhAKD0YSHy73nUgysO13XsJmd4fHiFyQ+00R7VVu2iV9Qcon2LZS/x
    1cydPZ4pQpfjEha6WxZ6o8ci/Ea/w0n+0HGPwaxlEG2Z9inNtj3pgFrYcRztfECb
    1j6HCibZbAzYtwIBIwJgO8h72WjcmvcpZ8OvHSvTwAguO2TkR6mPgHsgSaKy6GJo
    PUJnaZRWuba/HX0KGyhz19nPzLpzG5f0fYahlMJAyc13FV7K6kMBPXTRR6FxgHEg
    L0MPC7cdqAwOVNcPY6A7AjEA1bNaIjOzFN2sfZX0j7OMhQuc4zP7r80zaGc5oy6W
    p58hRAncFKEvnEq2CeL3vtuZAjEAwNBHpbNsBYTRPCHM7rZuG/iBtwp8Rxhc9I5w
    ixvzMgi+HpGLWzUIBS+P/XhekIjPAjA285rVmEP+DR255Ls65QbgYhJmTzIXQ2T9
    luLvcmFBC6l35Uc4gTgg4ALsmXLn71MCMGMpSWspEvuGInayTCL+vEjmNBT+FAdO
    W7D4zCpI43jRS9U06JVOeSc9CDk2lwiA3wIwCTB/6uc8Cq85D9YqpM10FuHjKpnP
    REPPOyrAspdeOAV+6VKRavstea7+2DZmSUgE
    -----END RSA PRIVATE KEY-----

  rsa_public: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAGEAoPRhIfLvedSDKw7XdewmZ3h8eIXJD7TRHtVW7aJX1ByifYtlL/HVzJ09nilCl+MSFrpbFnqjxyL8Rr/DSf7QcY/BrGUQbZn2Kc22PemAWthxHO18QJvWPocKJtlsDNi3 smoser@localhost

  dsa_private: |
    -----BEGIN DSA PRIVATE KEY-----
    MIIBuwIBAAKBgQDP2HLu7pTExL89USyM0264RCyWX/CMLmukxX0Jdbm29ax8FBJT
    pLrO8TIXVY5rPAJm1dTHnpuyJhOvU9G7M8tPUABtzSJh4GVSHlwaCfycwcpLv9TX
    DgWIpSj+6EiHCyaRlB1/CBp9RiaB+10QcFbm+lapuET+/Au6vSDp9IRtlQIVAIMR
    8KucvUYbOEI+yv+5LW9u3z/BAoGBAI0q6JP+JvJmwZFaeCMMVxXUbqiSko/P1lsa
    LNNBHZ5/8MOUIm8rB2FC6ziidfueJpqTMqeQmSAlEBCwnwreUnGfRrKoJpyPNENY
    d15MG6N5J+z81sEcHFeprryZ+D3Ge9VjPq3Tf3NhKKwCDQ0240aPezbnjPeFm4mH
    bYxxcZ9GAoGAXmLIFSQgiAPu459rCKxT46tHJtM0QfnNiEnQLbFluefZ/yiI4DI3
    8UzTCOXLhUA7ybmZha+D/csj15Y9/BNFuO7unzVhikCQV9DTeXX46pG4s1o23JKC
    /QaYWNMZ7kTRv+wWow9MhGiVdML4ZN4XnifuO5krqAybngIy66PMEoQCFEIsKKWv
    99iziAH0KBMVbxy03Trz
    -----END DSA PRIVATE KEY-----

  dsa_public: ssh-dss AAAAB3NzaC1kc3MAAACBAM/Ycu7ulMTEvz1RLIzTbrhELJZf8Iwua6TFfQl1ubb1rHwUElOkus7xMhdVjms8AmbV1Meem7ImE69T0bszy09QAG3NImHgZVIeXBoJ/JzByku/1NcOBYilKP7oSIcLJpGUHX8IGn1GJoH7XRBwVub6Vqm4RP78C7q9IOn0hG2VAAAAFQCDEfCrnL1GGzhCPsr/uS1vbt8/wQAAAIEAjSrok/4m8mbBkVp4IwxXFdRuqJKSj8/WWxos00Ednn/ww5QibysHYULrOKJ1+54mmpMyp5CZICUQELCfCt5ScZ9GsqgmnI80Q1h3Xkwbo3kn7PzWwRwcV6muvJn4PcZ71WM+rdN/c2EorAINDTbjRo97NueM94WbiYdtjHFxn0YAAACAXmLIFSQgiAPu459rCKxT46tHJtM0QfnNiEnQLbFluefZ/yiI4DI38UzTCOXLhUA7ybmZha+D/csj15Y9/BNFuO7unzVhikCQV9DTeXX46pG4s1o23JKC/QaYWNMZ7kTRv+wWow9MhGiVdML4ZN4XnifuO5krqAybngIy66PMEoQ= smoser@localhost


# remove access to the ec2 metadata service early in boot via null route
#  the null route can be removed (by root) with:
#    route del -host 169.254.169.254 reject
# default: false (service available)
disable_ec2_metadata: true

# run commands
# default: none
# runcmd contains a list of either lists or a string
# each item will be executed in order at rc.local like level with
# output to the console
# - if the item is a list, the items will be properly executed as if
#   passed to execve(3) (with the first arg as the command).
# - if the item is a string, it will be simply written to the file and
#   will be interpreted by &#39;sh&#39;
#
# Note, that the list has to be proper yaml, so you have to escape
# any characters yaml would eat (&#39;:&#39; can be problematic)
runcmd:
 - [ ls, -l, / ]
 - [ sh, -xc, &quot;echo $(date) &#39;: hello world!&#39;&quot; ]
 - [ sh, -c, echo &quot;=========hello world&#39;=========&quot; ]
 - ls -l /root
 - [ wget, &quot;http://slashdot.org&quot;, -O, /tmp/index.html ]


# boot commands
# default: none
# this is very similar to runcmd above, but commands run very early
# in the boot process, only slightly after a &#39;boothook&#39; would run.
# bootcmd should really only be used for things that could not be
# done later in the boot process.  bootcmd is very much like
# boothook, but possibly with more friendly.
#  * bootcmd will run on every boot
#  * the INSTANCE_ID variable will be set to the current instance id.
#  * you can use &#39;cloud-init-per&#39; command to help only run once
bootcmd:
 - echo 192.168.1.130 us.archive.ubuntu.com &gt; /etc/hosts
 - [ cloud-init-per, once, mymkfs, mkfs, /dev/vdb ]

# cloud_config_modules:
# default:
# cloud_config_modules:
# - mounts
# - ssh
# - apt-update-upgrade
# - puppet
# - updates-check
# - disable-ec2-metadata
# - runcmd
#
# This is an array of arrays or strings.
# if item is a string, then it is read as a module name
# if the item is an array it is of the form:
#   name, frequency, arguments
# where &#39;frequency&#39; is one of:
#   once-per-instance
#   always
# a python file in the CloudConfig/ module directory named 
# cc_&lt;name&gt;.py
# example:
cloud_config_modules:
 - mounts
 - ssh-import-id
 - ssh
 - grub-dpkg
 - [ apt-update-upgrade, always ]
 - puppet
 - updates-check
 - disable-ec2-metadata
 - runcmd
 - byobu

# unverified_modules: []
# if a config module declares a set of distros as supported then it will be
# skipped if running on a different distro.  to override this sanity check,
# provide a list of modules that should be run anyway in &#39;unverified_modules&#39;.
# The default is an empty list (ie, trust modules).
#
# Example:
#   unverified_modules: [&#39;apt-update-upgrade&#39;]
#   default: []

# ssh_import_id: [ user1, user2 ]
# ssh_import_id will feed the list in that variable to
#  ssh-import-id, so that public keys stored in launchpad
#  can easily be imported into the configured user
# This can be a single string (&#39;smoser&#39;) or a list ([smoser, kirkland])
ssh_import_id: [smoser]

# Provide debconf answers / debian preseed values
#
# See debconf-set-selections man page.
#
# Default: none
# 
debconf_selections: |     # Need to perserve newlines
        # Force debconf priority to critical.
        debconf debconf/priority select critical

        # Override default frontend to readline, but allow user to select.
        debconf debconf/frontend select readline
        debconf debconf/frontend seen false

# manage byobu defaults
# byobu_by_default:
#   &#39;user&#39; or &#39;enable-user&#39;: set byobu &#39;launch-by-default&#39; for the default user
#   &#39;system&#39; or &#39;enable-system&#39; or &#39;enable&#39;:
#      enable &#39;launch-by-default&#39; for all users, do not modify default user
#   &#39;disable&#39;: disable both default user and system
#   &#39;disable-system&#39;: disable system
#   &#39;disable-user&#39;: disable for default user
#   not-set: no changes made
byobu_by_default: system

# disable ssh access as root.
# if you want to be able to ssh in to the system as the root user
# rather than as the &#39;ubuntu&#39; user, then you must set this to false
# default: true
disable_root: false

# disable_root_opts: the value of this variable will prefix the
# respective key in /root/.ssh/authorized_keys if disable_root is true
# see &#39;man authorized_keys&#39; for more information on what you can do here
#
# The string &#39;$USER&#39; will be replaced with the username of the default user
#
# disable_root_opts: no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command=&quot;echo &#39;Please login as the user \&quot;$USER\&quot; rather than the user \&quot;root\&quot;.&#39;;echo;sleep 10&quot;


# set the locale to a given locale
# default: en_US.UTF-8
locale: en_US.UTF-8
# render template default-locale.tmpl to locale_configfile
locale_configfile: /etc/default/locale

# add entries to rsyslog configuration
# The first occurance of a given filename will truncate. 
# subsequent entries will append.
# if value is a scalar, its content is assumed to be &#39;content&#39;, and the
# default filename is used.
# if filename is not provided, it will default to &#39;rsylog_filename&#39;
# if filename does not start with a &#39;/&#39;, it will be put in &#39;rsyslog_dir&#39;
# rsyslog_dir default: /etc/rsyslog.d
# rsyslog_filename default: 20-cloud-config.conf
rsyslog:
 - &#39;:syslogtag, isequal, &quot;[CLOUDINIT]&quot; /var/log/cloud-foo.log&#39;
 - content: &quot;*.*   @@192.0.2.1:10514&quot;
 - filename: 01-examplecom.conf
   content: &quot;*.*   @@syslogd.example.com&quot;

# resize_rootfs should the / filesytem be resized on first boot
# this allows you to launch an instance with a larger disk / partition
# and have the instance automatically grow / to accomoddate it
# set to &#39;False&#39; to disable
# by default, the resizefs is done early in boot, and blocks
# if resize_rootfs is set to &#39;noblock&#39;, then it will be run in parallel
resize_rootfs: True

## hostname and /etc/hosts management
# cloud-init can handle updating some entries in /etc/hosts,
# and can set your hostname for you.
#
# if you do nothing you&#39;ll end up with:
#  * /etc/hostname (and `hostname`) managed via: &#39;preserve_hostame: false&#39;
#    if you do not change /etc/hostname, it will be updated with the cloud
#    provided hostname on each boot.  If you make a change, then manual
#    maintenance takes over, and cloud-init will not modify it.
#
#  * /etc/hosts managed via: &#39;manage_etc_hosts: false&#39;
#    cloud-init will not manage /etc/hosts at all.  It is in full manual
#    maintenance mode.
#
# You can change the above behavior with the following config variables:
#  Remember that these can be set in cloud-config via user-data,
#  /etc/cloud/cloud.cfg or any file in /etc/cloud/cloud.cfg.d/
#
# == Hostname management (via /etc/hostname) ==
#  * preserve_hostname:
#      default: False
#      If this option is set to True, then /etc/hostname will never updated
#      The default behavior is to update it if it has not been modified by
#      the user.
#
#  * hostname:
#      this option will be used wherever the &#39;hostname&#39; is needed
#      simply substitute it in the description above.
#      ** If you wish to set your hostname, set it here **
#      default: &#39;hostname&#39; as returned by the metadata service
#               on EC2, the hostname portion of &#39;local-hostname&#39; is used
#               which is something like &#39;ip-10-244-170-199&#39;
#
#  * fqdn:
#      this option will be used wherever &#39;fqdn&#39; is needed.
#      simply substitue it in the description above.
#      default: fqdn as returned by the metadata service.  on EC2 &#39;hostname&#39;
#               is used, so this is like: ip-10-244-170-199.ec2.internal
#
# == /etc/hosts management ==
#
# The cloud-config variable that covers management of /etc/hosts is 
# &#39;manage_etc_hosts&#39;
#
# By default, its value is &#39;false&#39; (boolean False)
#
#  * manage_etc_hosts:
#      default: false
#
#    false:
#      cloud-init will not modify /etc/hosts at all.  
#      * Whatever is present at instance boot time will be present after boot.
#      * User changes will not be overwritten
#
#    true or &#39;template&#39;:
#      on every boot, /etc/hosts will be re-written from 
#      /etc/cloud/templates/hosts.tmpl.
#      The strings &#39;$hostname&#39; and &#39;$fqdn&#39; are replaced in the template
#      with the appropriate values.
#      To make modifications persistant across a reboot, you must make 
#      modificatoins to /etc/cloud/templates/hosts.tmpl
#
#    localhost:
#      This option ensures that an entry is present for fqdn as described in
#      section 5.1.2 of the debian manual 
#      http://www.debian.org/doc/manuals/debian-reference/ch05.en.html
#
#      cloud-init will generally own the 127.0.1.1 entry, and will update 
#      it to the hostname and fqdn on every boot.  All other entries will
#      be left as is.  &#39;ping `hostname`&#39; will ping 127.0.1.1
#
#      If you want a fqdn entry with aliases other than &#39;hostname&#39; to resolve
#      to a localhost interface, you&#39;ll need to use something other than 
#      127.0.1.1.  For example:
#        127.0.1.2 myhost.fqdn.example.com myhost whatup.example.com

# final_message
# default: cloud-init boot finished at $TIMESTAMP. Up $UPTIME seconds
# this message is written by cloud-final when the system is finished
# its first boot
final_message: &quot;The system is finally up, after $UPTIME seconds&quot;

# configure where output will go
# &#39;output&#39; entry is a dict with &#39;init&#39;, &#39;config&#39;, &#39;final&#39; or &#39;all&#39;
# entries.  Each one defines where 
#  cloud-init, cloud-config, cloud-config-final or all output will go
# each entry in the dict can be a string, list or dict.
#  if it is a string, it refers to stdout and stderr
#  if it is a list, entry 0 is stdout, entry 1 is stderr
#  if it is a dict, it is expected to have &#39;output&#39; and &#39;error&#39; fields
# default is to write to console only
# the special entry &quot;&amp;1&quot; for an error means &quot;same location as stdout&quot;
#  (Note, that &#39;&amp;1&#39; has meaning in yaml, so it must be quoted)
output:
 init: &quot;&gt; /var/log/my-cloud-init.log&quot;
 config: [ &quot;&gt;&gt; /tmp/foo.out&quot;, &quot;&gt; /tmp/foo.err&quot; ]
 final:
   output: &quot;| tee /tmp/final.stdout | tee /tmp/bar.stdout&quot;
   error: &quot;&amp;1&quot;


# phone_home: if this dictionary is present, then the phone_home
# cloud-config module will post specified data back to the given
# url
# default: none
# phone_home:
#  url: http://my.foo.bar/$INSTANCE/
#  post: all
#  tries: 10
#
phone_home:
 url: http://my.example.com/$INSTANCE_ID/
 post: [ pub_key_dsa, pub_key_rsa, pub_key_ecdsa, instance_id ]

# timezone: set the timezone for this instance
# the value of &#39;timezone&#39; must exist in /usr/share/zoneinfo
timezone: US/Eastern

# def_log_file and syslog_fix_perms work together
# if 
# - logging is set to go to a log file &#39;L&#39; both with and without syslog
# - and &#39;L&#39; does not exist
# - and syslog is configured to write to &#39;L&#39;
# then &#39;L&#39; will be initially created with root:root ownership (during
# cloud-init), and then at cloud-config time (when syslog is available)
# the syslog daemon will be unable to write to the file.
# 
# to remedy this situation, &#39;def_log_file&#39; can be set to a filename
# and syslog_fix_perms to a string containing &quot;&lt;user&gt;:&lt;group&gt;&quot;
#
# the default values are &#39;/var/log/cloud-init.log&#39; and &#39;syslog:adm&#39;
# the value of &#39;def_log_file&#39; should match what is configured in logging
# if either is empty, then no change of ownership will be done
def_log_file: /var/log/my-logging-file.log
syslog_fix_perms: syslog:root

# you can set passwords for a user or multiple users
# this is off by default.
# to set the default user&#39;s password, use the &#39;password&#39; option.
# if set, to &#39;R&#39; or &#39;RANDOM&#39;, then a random password will be
# generated and written to stdout (the console)
# password: passw0rd
#
# also note, that this will expire the password, forcing a change
# on first login. If you do not want to expire, see &#39;chpasswd&#39; below.
#
# By default in the UEC images password authentication is disabled
# Thus, simply setting &#39;password&#39; as above will only allow you to login
# via the console.
#
# in order to enable password login via ssh you must set
# &#39;ssh_pwauth&#39;.
# If it is set, to &#39;True&#39; or &#39;False&#39;, then sshd_config will be updated
# to ensure the desired function.  If not set, or set to &#39;&#39; or &#39;unchanged&#39;
# then sshd_config will not be updated.
# ssh_pwauth: True
#
# there is also an option to set multiple users passwords, using &#39;chpasswd&#39;
# That looks like the following, with &#39;expire&#39; set to &#39;True&#39; by default.
# to not expire users passwords, set &#39;expire&#39; to &#39;False&#39;:
# chpasswd:
#  list: |
#    user1:password1
#    user2:RANDOM
#  expire: True
# ssh_pwauth: [ True, False, &quot;&quot; or &quot;unchanged&quot; ]
#
# So, a simple working example to allow login via ssh, and not expire
# for the default user would look like:
password: passw0rd
chpasswd: { expire: False }
ssh_pwauth: True

# manual cache clean.
#  By default, the link from /var/lib/cloud/instance to
#  the specific instance in /var/lib/cloud/instances/ is removed on every
#  boot.  The cloud-init code then searches for a DataSource on every boot
#  if your DataSource will not be present on every boot, then you can set
#  this option to &#39;True&#39;, and maintain (remove) that link before the image
#  will be booted as a new instance.
# default is False
manual_cache_clean: False

# When cloud-init is finished running including having run 
# cloud_init_modules, then it will run this command.  The default
# is to emit an upstart signal as shown below.  If the value is a
# list, it will be passed to Popen.  If it is a string, it will be
# invoked through &#39;sh -c&#39;.
# 
# default value:
# cc_ready_cmd: [ initctl, emit, cloud-config, CLOUD_CFG=/var/lib/instance//cloud-config.txt ]
# example:
# cc_ready_cmd: [ sh, -c, &#39;echo HI MOM &gt; /tmp/file&#39; ]

## configure interaction with ssh server
# ssh_svcname: ssh
#    set the name of the option to &#39;service restart&#39;
#    in order to restart the ssh daemon. For fedora, use &#39;sshd&#39;
#    default: ssh
# ssh_deletekeys: True
#    boolean indicating if existing ssh keys should be deleted on a
#    per-instance basis.  On a public image, this should absolutely be set
#    to &#39;True&#39;
# ssh_genkeytypes: [&#39;rsa&#39;, &#39;dsa&#39;, &#39;ecdsa&#39;]
#    a list of the ssh key types that should be generated
#    These are passed to &#39;ssh-keygen -t&#39;

## configuration of ssh keys output to console
# ssh_fp_console_blacklist: []
# ssh_key_console_blacklist: [ssh-dss]
#   A list of key types (first token of a /etc/ssh/ssh_key_*.pub file)
#   that should be skipped when outputting key fingerprints and keys
#   to the console respectively.

## poweroff or reboot system after finished
# default: none
#
# power_state can be used to make the system shutdown, reboot or
# halt after boot is finished.  This same thing can be acheived by
# user-data scripts or by runcmd by simply invoking &#39;shutdown&#39;.
# 
# Doing it this way ensures that cloud-init is entirely finished with
# modules that would be executed, and avoids any error/log messages
# that may go to the console as a result of system services like
# syslog being taken down while cloud-init is running.
#
# delay: form accepted by shutdown.  default is &#39;now&#39;. other format
#        accepted is +m (m in minutes)
# mode: required. must be one of &#39;poweroff&#39;, &#39;halt&#39;, &#39;reboot&#39;
# message: provided as the message argument to &#39;shutdown&#39;. default is none.
power_state:
 delay: 30
 mode: poweroff
 message: Bye Bye
</pre>
</td>
</tr>
</table>
</div>
</div>
<p id="footer" class="fl">
Loggerhead is a web-based interface for <a href="http://bazaar-vcs.org/">Bazaar</a> branches
<br />
Version: 1.18.2<span>, Revision: 17196</span>
</p>
</div>
</body>
</html>